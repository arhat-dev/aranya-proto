/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ARANYA_MSG_STATE_PB_H_INCLUDED
#define PB_ARANYA_MSG_STATE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _aranya_State_Action {
    aranya_State_Action__INVALID_STATE = 0,
    aranya_State_Action_ONLINE = 1,
    aranya_State_Action_OFFLINE = 2
} aranya_State_Action;

/* Struct definitions */
typedef struct _aranya_State {
    aranya_State_Action action;
    pb_callback_t device_id;
} aranya_State;


/* Helper constants for enums */
#define _aranya_State_Action_MIN aranya_State_Action__INVALID_STATE
#define _aranya_State_Action_MAX aranya_State_Action_OFFLINE
#define _aranya_State_Action_ARRAYSIZE ((aranya_State_Action)(aranya_State_Action_OFFLINE+1))


/* Initializer values for message structs */
#define aranya_State_init_default                {_aranya_State_Action_MIN, {{NULL}, NULL}}
#define aranya_State_init_zero                   {_aranya_State_Action_MIN, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define aranya_State_action_tag                  1
#define aranya_State_device_id_tag               2

/* Struct field encoding specification for nanopb */
#define aranya_State_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    action,            1) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         2)
#define aranya_State_CALLBACK pb_default_field_callback
#define aranya_State_DEFAULT NULL

extern const pb_msgdesc_t aranya_State_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define aranya_State_fields &aranya_State_msg

/* Maximum encoded size of messages (where known) */
/* aranya_State_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
