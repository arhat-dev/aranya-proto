/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_RUNTIME_RUNTIME_CMD_POD_PB_H_INCLUDED
#define PB_RUNTIME_RUNTIME_CMD_POD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _runtime_RestartPolicy {
    runtime_RestartPolicy_RESTART_ALWAYS = 0,
    runtime_RestartPolicy_RESTART_ON_FAILURE = 1,
    runtime_RestartPolicy_RESTART_NEVER = 2
} runtime_RestartPolicy;

typedef enum _runtime_ContainerSecuritySpec_ProcMountKind {
    runtime_ContainerSecuritySpec_ProcMountKind_PROC_MOUNT_DEFAULT = 0,
    runtime_ContainerSecuritySpec_ProcMountKind_PROC_MOUNT_UNMASKED = 1
} runtime_ContainerSecuritySpec_ProcMountKind;

/* Struct definitions */
typedef struct _runtime_ContainerAction_Exec {
    pb_callback_t command;
} runtime_ContainerAction_Exec;

typedef struct _runtime_ContainerAction_HTTP {
    pb_callback_t method;
    pb_callback_t url;
    pb_callback_t headers;
} runtime_ContainerAction_HTTP;

typedef struct _runtime_ContainerAction_Socket {
    pb_callback_t address;
} runtime_ContainerAction_Socket;

typedef struct _runtime_ContainerSpec_EnvsEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_ContainerSpec_EnvsEntry;

typedef struct _runtime_KeyValuePair {
    pb_callback_t key;
    pb_callback_t value;
} runtime_KeyValuePair;

typedef struct _runtime_NamedData {
    pb_callback_t data_map;
} runtime_NamedData;

typedef struct _runtime_NamedData_DataMapEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_NamedData_DataMapEntry;

typedef struct _runtime_PodEnsureCmd_LabelsEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_PodEnsureCmd_LabelsEntry;

typedef struct _runtime_PodNetworkSpec {
    pb_callback_t nameservers;
    pb_callback_t dns_searches;
    pb_callback_t dns_options;
    pb_callback_t hosts;
    pb_callback_t abbot_request_bytes;
} runtime_PodNetworkSpec;

typedef struct _runtime_PodNetworkSpec_HostsEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_PodNetworkSpec_HostsEntry;

typedef struct _runtime_PodSecuritySpec {
    pb_callback_t sysctls;
} runtime_PodSecuritySpec;

typedef struct _runtime_PodSecuritySpec_SysctlsEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_PodSecuritySpec_SysctlsEntry;

typedef struct _runtime_PodVolumeSpec {
    pb_callback_t host_paths;
    pb_callback_t volume_data;
} runtime_PodVolumeSpec;

typedef struct _runtime_PodVolumeSpec_HostPathsEntry {
    pb_callback_t key;
    pb_callback_t value;
} runtime_PodVolumeSpec_HostPathsEntry;

typedef struct _runtime_SELinuxOptions {
    pb_callback_t type;
    pb_callback_t level;
    pb_callback_t role;
    pb_callback_t user;
} runtime_SELinuxOptions;

typedef struct _runtime_ContainerAction {
    pb_size_t which_action;
    union {
        runtime_ContainerAction_Exec exec;
        runtime_ContainerAction_HTTP http;
        runtime_ContainerAction_Socket socket;
    } action;
} runtime_ContainerAction;

typedef struct _runtime_ContainerMountSpec {
    pb_callback_t mount_path;
    pb_callback_t sub_path;
    bool read_only;
    pb_callback_t type;
    pb_callback_t options;
    uint32_t file_mode;
    bool remote;
} runtime_ContainerMountSpec;

typedef struct _runtime_ContainerSecuritySpec {
    bool privileged;
    bool allow_new_privileges;
    bool non_root;
    bool read_only_rootfs;
    int64_t user;
    int64_t group;
    pb_callback_t caps_add;
    pb_callback_t caps_drop;
    runtime_ContainerSecuritySpec_ProcMountKind proc_mount_kind;
    bool has_selinux_options;
    runtime_SELinuxOptions selinux_options;
} runtime_ContainerSecuritySpec;

typedef struct _runtime_PodDeleteCmd {
    pb_callback_t pod_uid;
    pb_callback_t containers;
    int64_t grace_time;
    pb_callback_t hook_pre_stop;
} runtime_PodDeleteCmd;

typedef struct _runtime_PodEnsureCmd {
    pb_callback_t pod_uid;
    pb_callback_t namespace;
    pb_callback_t name;
    runtime_RestartPolicy restart_policy;
    bool host_ipc;
    bool host_network;
    bool host_pid;
    bool share_pid;
    bool wait;
    pb_callback_t hostname;
    pb_callback_t containers;
    bool has_network;
    runtime_PodNetworkSpec network;
    bool has_volumes;
    runtime_PodVolumeSpec volumes;
    bool has_security;
    runtime_PodSecuritySpec security;
    pb_callback_t labels;
} runtime_PodEnsureCmd;

typedef struct _runtime_PodListCmd {
    bool all;
    pb_callback_t names;
} runtime_PodListCmd;

typedef struct _runtime_PodVolumeSpec_VolumeDataEntry {
    pb_callback_t key;
    bool has_value;
    runtime_NamedData value;
} runtime_PodVolumeSpec_VolumeDataEntry;

typedef struct _runtime_ContainerProbeSpec {
    int64_t initial_delay;
    int64_t probe_timeout;
    int64_t probe_interval;
    int32_t success_threshold;
    int32_t failure_threshold;
    bool has_method;
    runtime_ContainerAction method;
} runtime_ContainerProbeSpec;

typedef struct _runtime_ContainerSpec_MountsEntry {
    pb_callback_t key;
    bool has_value;
    runtime_ContainerMountSpec value;
} runtime_ContainerSpec_MountsEntry;

typedef struct _runtime_PodDeleteCmd_HookPreStopEntry {
    pb_callback_t key;
    bool has_value;
    runtime_ContainerAction value;
} runtime_PodDeleteCmd_HookPreStopEntry;

typedef struct _runtime_ContainerSpec {
    pb_callback_t name;
    pb_callback_t image;
    pb_callback_t working_dir;
    bool stdin;
    bool stdin_once;
    bool tty;
    pb_callback_t command;
    pb_callback_t args;
    pb_callback_t envs;
    pb_callback_t mounts;
    bool has_readiness_check;
    runtime_ContainerProbeSpec readiness_check;
    bool has_liveness_check;
    runtime_ContainerProbeSpec liveness_check;
    bool has_security;
    runtime_ContainerSecuritySpec security;
    bool has_hook_post_start;
    runtime_ContainerAction hook_post_start;
} runtime_ContainerSpec;


/* Helper constants for enums */
#define _runtime_RestartPolicy_MIN runtime_RestartPolicy_RESTART_ALWAYS
#define _runtime_RestartPolicy_MAX runtime_RestartPolicy_RESTART_NEVER
#define _runtime_RestartPolicy_ARRAYSIZE ((runtime_RestartPolicy)(runtime_RestartPolicy_RESTART_NEVER+1))

#define _runtime_ContainerSecuritySpec_ProcMountKind_MIN runtime_ContainerSecuritySpec_ProcMountKind_PROC_MOUNT_DEFAULT
#define _runtime_ContainerSecuritySpec_ProcMountKind_MAX runtime_ContainerSecuritySpec_ProcMountKind_PROC_MOUNT_UNMASKED
#define _runtime_ContainerSecuritySpec_ProcMountKind_ARRAYSIZE ((runtime_ContainerSecuritySpec_ProcMountKind)(runtime_ContainerSecuritySpec_ProcMountKind_PROC_MOUNT_UNMASKED+1))


/* Initializer values for message structs */
#define runtime_NamedData_init_default           {{{NULL}, NULL}}
#define runtime_NamedData_DataMapEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_SELinuxOptions_init_default      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerSecuritySpec_init_default {0, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, _runtime_ContainerSecuritySpec_ProcMountKind_MIN, false, runtime_SELinuxOptions_init_default}
#define runtime_ContainerMountSpec_init_default  {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0}
#define runtime_KeyValuePair_init_default        {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerAction_init_default     {0, {runtime_ContainerAction_Exec_init_default}}
#define runtime_ContainerAction_Exec_init_default {{{NULL}, NULL}}
#define runtime_ContainerAction_HTTP_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerAction_Socket_init_default {{{NULL}, NULL}}
#define runtime_ContainerProbeSpec_init_default  {0, 0, 0, 0, 0, false, runtime_ContainerAction_init_default}
#define runtime_ContainerSpec_init_default       {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, runtime_ContainerProbeSpec_init_default, false, runtime_ContainerProbeSpec_init_default, false, runtime_ContainerSecuritySpec_init_default, false, runtime_ContainerAction_init_default}
#define runtime_ContainerSpec_EnvsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerSpec_MountsEntry_init_default {{{NULL}, NULL}, false, runtime_ContainerMountSpec_init_default}
#define runtime_PodVolumeSpec_init_default       {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodVolumeSpec_HostPathsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodVolumeSpec_VolumeDataEntry_init_default {{{NULL}, NULL}, false, runtime_NamedData_init_default}
#define runtime_PodSecuritySpec_init_default     {{{NULL}, NULL}}
#define runtime_PodSecuritySpec_SysctlsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodNetworkSpec_init_default      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodNetworkSpec_HostsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodEnsureCmd_init_default        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, _runtime_RestartPolicy_MIN, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, runtime_PodNetworkSpec_init_default, false, runtime_PodVolumeSpec_init_default, false, runtime_PodSecuritySpec_init_default, {{NULL}, NULL}}
#define runtime_PodEnsureCmd_LabelsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodDeleteCmd_init_default        {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define runtime_PodDeleteCmd_HookPreStopEntry_init_default {{{NULL}, NULL}, false, runtime_ContainerAction_init_default}
#define runtime_PodListCmd_init_default          {0, {{NULL}, NULL}}
#define runtime_NamedData_init_zero              {{{NULL}, NULL}}
#define runtime_NamedData_DataMapEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_SELinuxOptions_init_zero         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerSecuritySpec_init_zero  {0, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, _runtime_ContainerSecuritySpec_ProcMountKind_MIN, false, runtime_SELinuxOptions_init_zero}
#define runtime_ContainerMountSpec_init_zero     {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0}
#define runtime_KeyValuePair_init_zero           {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerAction_init_zero        {0, {runtime_ContainerAction_Exec_init_zero}}
#define runtime_ContainerAction_Exec_init_zero   {{{NULL}, NULL}}
#define runtime_ContainerAction_HTTP_init_zero   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerAction_Socket_init_zero {{{NULL}, NULL}}
#define runtime_ContainerProbeSpec_init_zero     {0, 0, 0, 0, 0, false, runtime_ContainerAction_init_zero}
#define runtime_ContainerSpec_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, runtime_ContainerProbeSpec_init_zero, false, runtime_ContainerProbeSpec_init_zero, false, runtime_ContainerSecuritySpec_init_zero, false, runtime_ContainerAction_init_zero}
#define runtime_ContainerSpec_EnvsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_ContainerSpec_MountsEntry_init_zero {{{NULL}, NULL}, false, runtime_ContainerMountSpec_init_zero}
#define runtime_PodVolumeSpec_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodVolumeSpec_HostPathsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodVolumeSpec_VolumeDataEntry_init_zero {{{NULL}, NULL}, false, runtime_NamedData_init_zero}
#define runtime_PodSecuritySpec_init_zero        {{{NULL}, NULL}}
#define runtime_PodSecuritySpec_SysctlsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodNetworkSpec_init_zero         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodNetworkSpec_HostsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodEnsureCmd_init_zero           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, _runtime_RestartPolicy_MIN, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, runtime_PodNetworkSpec_init_zero, false, runtime_PodVolumeSpec_init_zero, false, runtime_PodSecuritySpec_init_zero, {{NULL}, NULL}}
#define runtime_PodEnsureCmd_LabelsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define runtime_PodDeleteCmd_init_zero           {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define runtime_PodDeleteCmd_HookPreStopEntry_init_zero {{{NULL}, NULL}, false, runtime_ContainerAction_init_zero}
#define runtime_PodListCmd_init_zero             {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define runtime_ContainerAction_Exec_command_tag 1
#define runtime_ContainerAction_HTTP_method_tag  1
#define runtime_ContainerAction_HTTP_url_tag     2
#define runtime_ContainerAction_HTTP_headers_tag 3
#define runtime_ContainerAction_Socket_address_tag 1
#define runtime_ContainerSpec_EnvsEntry_key_tag  1
#define runtime_ContainerSpec_EnvsEntry_value_tag 2
#define runtime_KeyValuePair_key_tag             1
#define runtime_KeyValuePair_value_tag           2
#define runtime_NamedData_data_map_tag           1
#define runtime_NamedData_DataMapEntry_key_tag   1
#define runtime_NamedData_DataMapEntry_value_tag 2
#define runtime_PodEnsureCmd_LabelsEntry_key_tag 1
#define runtime_PodEnsureCmd_LabelsEntry_value_tag 2
#define runtime_PodNetworkSpec_nameservers_tag   1
#define runtime_PodNetworkSpec_dns_searches_tag  2
#define runtime_PodNetworkSpec_dns_options_tag   3
#define runtime_PodNetworkSpec_hosts_tag         4
#define runtime_PodNetworkSpec_abbot_request_bytes_tag 11
#define runtime_PodNetworkSpec_HostsEntry_key_tag 1
#define runtime_PodNetworkSpec_HostsEntry_value_tag 2
#define runtime_PodSecuritySpec_sysctls_tag      15
#define runtime_PodSecuritySpec_SysctlsEntry_key_tag 1
#define runtime_PodSecuritySpec_SysctlsEntry_value_tag 2
#define runtime_PodVolumeSpec_host_paths_tag     21
#define runtime_PodVolumeSpec_volume_data_tag    22
#define runtime_PodVolumeSpec_HostPathsEntry_key_tag 1
#define runtime_PodVolumeSpec_HostPathsEntry_value_tag 2
#define runtime_SELinuxOptions_type_tag          1
#define runtime_SELinuxOptions_level_tag         2
#define runtime_SELinuxOptions_role_tag          3
#define runtime_SELinuxOptions_user_tag          4
#define runtime_ContainerAction_exec_tag         1
#define runtime_ContainerAction_http_tag         2
#define runtime_ContainerAction_socket_tag       3
#define runtime_ContainerMountSpec_mount_path_tag 1
#define runtime_ContainerMountSpec_sub_path_tag  2
#define runtime_ContainerMountSpec_read_only_tag 3
#define runtime_ContainerMountSpec_type_tag      4
#define runtime_ContainerMountSpec_options_tag   5
#define runtime_ContainerMountSpec_file_mode_tag 6
#define runtime_ContainerMountSpec_remote_tag    7
#define runtime_ContainerSecuritySpec_privileged_tag 1
#define runtime_ContainerSecuritySpec_allow_new_privileges_tag 2
#define runtime_ContainerSecuritySpec_non_root_tag 3
#define runtime_ContainerSecuritySpec_read_only_rootfs_tag 4
#define runtime_ContainerSecuritySpec_user_tag   5
#define runtime_ContainerSecuritySpec_group_tag  6
#define runtime_ContainerSecuritySpec_caps_add_tag 7
#define runtime_ContainerSecuritySpec_caps_drop_tag 8
#define runtime_ContainerSecuritySpec_proc_mount_kind_tag 9
#define runtime_ContainerSecuritySpec_selinux_options_tag 10
#define runtime_PodDeleteCmd_pod_uid_tag         1
#define runtime_PodDeleteCmd_containers_tag      2
#define runtime_PodDeleteCmd_grace_time_tag      10
#define runtime_PodDeleteCmd_hook_pre_stop_tag   11
#define runtime_PodEnsureCmd_pod_uid_tag         1
#define runtime_PodEnsureCmd_namespace_tag       2
#define runtime_PodEnsureCmd_name_tag            3
#define runtime_PodEnsureCmd_restart_policy_tag  4
#define runtime_PodEnsureCmd_host_ipc_tag        5
#define runtime_PodEnsureCmd_host_network_tag    6
#define runtime_PodEnsureCmd_host_pid_tag        7
#define runtime_PodEnsureCmd_share_pid_tag       8
#define runtime_PodEnsureCmd_wait_tag            9
#define runtime_PodEnsureCmd_hostname_tag        10
#define runtime_PodEnsureCmd_containers_tag      11
#define runtime_PodEnsureCmd_network_tag         12
#define runtime_PodEnsureCmd_volumes_tag         13
#define runtime_PodEnsureCmd_security_tag        14
#define runtime_PodEnsureCmd_labels_tag          15
#define runtime_PodListCmd_all_tag               1
#define runtime_PodListCmd_names_tag             2
#define runtime_PodVolumeSpec_VolumeDataEntry_key_tag 1
#define runtime_PodVolumeSpec_VolumeDataEntry_value_tag 2
#define runtime_ContainerProbeSpec_initial_delay_tag 1
#define runtime_ContainerProbeSpec_probe_timeout_tag 2
#define runtime_ContainerProbeSpec_probe_interval_tag 3
#define runtime_ContainerProbeSpec_success_threshold_tag 4
#define runtime_ContainerProbeSpec_failure_threshold_tag 5
#define runtime_ContainerProbeSpec_method_tag    6
#define runtime_ContainerSpec_MountsEntry_key_tag 1
#define runtime_ContainerSpec_MountsEntry_value_tag 2
#define runtime_PodDeleteCmd_HookPreStopEntry_key_tag 1
#define runtime_PodDeleteCmd_HookPreStopEntry_value_tag 2
#define runtime_ContainerSpec_name_tag           1
#define runtime_ContainerSpec_image_tag          2
#define runtime_ContainerSpec_working_dir_tag    3
#define runtime_ContainerSpec_stdin_tag          4
#define runtime_ContainerSpec_stdin_once_tag     5
#define runtime_ContainerSpec_tty_tag            6
#define runtime_ContainerSpec_command_tag        7
#define runtime_ContainerSpec_args_tag           8
#define runtime_ContainerSpec_envs_tag           9
#define runtime_ContainerSpec_mounts_tag         10
#define runtime_ContainerSpec_readiness_check_tag 11
#define runtime_ContainerSpec_liveness_check_tag 12
#define runtime_ContainerSpec_security_tag       13
#define runtime_ContainerSpec_hook_post_start_tag 14

/* Struct field encoding specification for nanopb */
#define runtime_NamedData_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  data_map,          1)
#define runtime_NamedData_CALLBACK pb_default_field_callback
#define runtime_NamedData_DEFAULT NULL
#define runtime_NamedData_data_map_MSGTYPE runtime_NamedData_DataMapEntry

#define runtime_NamedData_DataMapEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, BYTES,    value,             2)
#define runtime_NamedData_DataMapEntry_CALLBACK pb_default_field_callback
#define runtime_NamedData_DataMapEntry_DEFAULT NULL

#define runtime_SELinuxOptions_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   type,              1) \
X(a, CALLBACK, SINGULAR, STRING,   level,             2) \
X(a, CALLBACK, SINGULAR, STRING,   role,              3) \
X(a, CALLBACK, SINGULAR, STRING,   user,              4)
#define runtime_SELinuxOptions_CALLBACK pb_default_field_callback
#define runtime_SELinuxOptions_DEFAULT NULL

#define runtime_ContainerSecuritySpec_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     privileged,        1) \
X(a, STATIC,   SINGULAR, BOOL,     allow_new_privileges,   2) \
X(a, STATIC,   SINGULAR, BOOL,     non_root,          3) \
X(a, STATIC,   SINGULAR, BOOL,     read_only_rootfs,   4) \
X(a, STATIC,   SINGULAR, INT64,    user,              5) \
X(a, STATIC,   SINGULAR, INT64,    group,             6) \
X(a, CALLBACK, REPEATED, STRING,   caps_add,          7) \
X(a, CALLBACK, REPEATED, STRING,   caps_drop,         8) \
X(a, STATIC,   SINGULAR, UENUM,    proc_mount_kind,   9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  selinux_options,  10)
#define runtime_ContainerSecuritySpec_CALLBACK pb_default_field_callback
#define runtime_ContainerSecuritySpec_DEFAULT NULL
#define runtime_ContainerSecuritySpec_selinux_options_MSGTYPE runtime_SELinuxOptions

#define runtime_ContainerMountSpec_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   mount_path,        1) \
X(a, CALLBACK, SINGULAR, STRING,   sub_path,          2) \
X(a, STATIC,   SINGULAR, BOOL,     read_only,         3) \
X(a, CALLBACK, SINGULAR, STRING,   type,              4) \
X(a, CALLBACK, REPEATED, STRING,   options,           5) \
X(a, STATIC,   SINGULAR, UINT32,   file_mode,         6) \
X(a, STATIC,   SINGULAR, BOOL,     remote,            7)
#define runtime_ContainerMountSpec_CALLBACK pb_default_field_callback
#define runtime_ContainerMountSpec_DEFAULT NULL

#define runtime_KeyValuePair_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_KeyValuePair_CALLBACK pb_default_field_callback
#define runtime_KeyValuePair_DEFAULT NULL

#define runtime_ContainerAction_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (action,exec,action.exec),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (action,http,action.http),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (action,socket,action.socket),   3)
#define runtime_ContainerAction_CALLBACK NULL
#define runtime_ContainerAction_DEFAULT NULL
#define runtime_ContainerAction_action_exec_MSGTYPE runtime_ContainerAction_Exec
#define runtime_ContainerAction_action_http_MSGTYPE runtime_ContainerAction_HTTP
#define runtime_ContainerAction_action_socket_MSGTYPE runtime_ContainerAction_Socket

#define runtime_ContainerAction_Exec_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   command,           1)
#define runtime_ContainerAction_Exec_CALLBACK pb_default_field_callback
#define runtime_ContainerAction_Exec_DEFAULT NULL

#define runtime_ContainerAction_HTTP_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   method,            1) \
X(a, CALLBACK, SINGULAR, STRING,   url,               2) \
X(a, CALLBACK, REPEATED, MESSAGE,  headers,           3)
#define runtime_ContainerAction_HTTP_CALLBACK pb_default_field_callback
#define runtime_ContainerAction_HTTP_DEFAULT NULL
#define runtime_ContainerAction_HTTP_headers_MSGTYPE runtime_KeyValuePair

#define runtime_ContainerAction_Socket_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   address,           1)
#define runtime_ContainerAction_Socket_CALLBACK pb_default_field_callback
#define runtime_ContainerAction_Socket_DEFAULT NULL

#define runtime_ContainerProbeSpec_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    initial_delay,     1) \
X(a, STATIC,   SINGULAR, INT64,    probe_timeout,     2) \
X(a, STATIC,   SINGULAR, INT64,    probe_interval,    3) \
X(a, STATIC,   SINGULAR, INT32,    success_threshold,   4) \
X(a, STATIC,   SINGULAR, INT32,    failure_threshold,   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  method,            6)
#define runtime_ContainerProbeSpec_CALLBACK NULL
#define runtime_ContainerProbeSpec_DEFAULT NULL
#define runtime_ContainerProbeSpec_method_MSGTYPE runtime_ContainerAction

#define runtime_ContainerSpec_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   image,             2) \
X(a, CALLBACK, SINGULAR, STRING,   working_dir,       3) \
X(a, STATIC,   SINGULAR, BOOL,     stdin,             4) \
X(a, STATIC,   SINGULAR, BOOL,     stdin_once,        5) \
X(a, STATIC,   SINGULAR, BOOL,     tty,               6) \
X(a, CALLBACK, REPEATED, STRING,   command,           7) \
X(a, CALLBACK, REPEATED, STRING,   args,              8) \
X(a, CALLBACK, REPEATED, MESSAGE,  envs,              9) \
X(a, CALLBACK, REPEATED, MESSAGE,  mounts,           10) \
X(a, STATIC,   OPTIONAL, MESSAGE,  readiness_check,  11) \
X(a, STATIC,   OPTIONAL, MESSAGE,  liveness_check,   12) \
X(a, STATIC,   OPTIONAL, MESSAGE,  security,         13) \
X(a, STATIC,   OPTIONAL, MESSAGE,  hook_post_start,  14)
#define runtime_ContainerSpec_CALLBACK pb_default_field_callback
#define runtime_ContainerSpec_DEFAULT NULL
#define runtime_ContainerSpec_envs_MSGTYPE runtime_ContainerSpec_EnvsEntry
#define runtime_ContainerSpec_mounts_MSGTYPE runtime_ContainerSpec_MountsEntry
#define runtime_ContainerSpec_readiness_check_MSGTYPE runtime_ContainerProbeSpec
#define runtime_ContainerSpec_liveness_check_MSGTYPE runtime_ContainerProbeSpec
#define runtime_ContainerSpec_security_MSGTYPE runtime_ContainerSecuritySpec
#define runtime_ContainerSpec_hook_post_start_MSGTYPE runtime_ContainerAction

#define runtime_ContainerSpec_EnvsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_ContainerSpec_EnvsEntry_CALLBACK pb_default_field_callback
#define runtime_ContainerSpec_EnvsEntry_DEFAULT NULL

#define runtime_ContainerSpec_MountsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define runtime_ContainerSpec_MountsEntry_CALLBACK pb_default_field_callback
#define runtime_ContainerSpec_MountsEntry_DEFAULT NULL
#define runtime_ContainerSpec_MountsEntry_value_MSGTYPE runtime_ContainerMountSpec

#define runtime_PodVolumeSpec_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  host_paths,       21) \
X(a, CALLBACK, REPEATED, MESSAGE,  volume_data,      22)
#define runtime_PodVolumeSpec_CALLBACK pb_default_field_callback
#define runtime_PodVolumeSpec_DEFAULT NULL
#define runtime_PodVolumeSpec_host_paths_MSGTYPE runtime_PodVolumeSpec_HostPathsEntry
#define runtime_PodVolumeSpec_volume_data_MSGTYPE runtime_PodVolumeSpec_VolumeDataEntry

#define runtime_PodVolumeSpec_HostPathsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_PodVolumeSpec_HostPathsEntry_CALLBACK pb_default_field_callback
#define runtime_PodVolumeSpec_HostPathsEntry_DEFAULT NULL

#define runtime_PodVolumeSpec_VolumeDataEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define runtime_PodVolumeSpec_VolumeDataEntry_CALLBACK pb_default_field_callback
#define runtime_PodVolumeSpec_VolumeDataEntry_DEFAULT NULL
#define runtime_PodVolumeSpec_VolumeDataEntry_value_MSGTYPE runtime_NamedData

#define runtime_PodSecuritySpec_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  sysctls,          15)
#define runtime_PodSecuritySpec_CALLBACK pb_default_field_callback
#define runtime_PodSecuritySpec_DEFAULT NULL
#define runtime_PodSecuritySpec_sysctls_MSGTYPE runtime_PodSecuritySpec_SysctlsEntry

#define runtime_PodSecuritySpec_SysctlsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_PodSecuritySpec_SysctlsEntry_CALLBACK pb_default_field_callback
#define runtime_PodSecuritySpec_SysctlsEntry_DEFAULT NULL

#define runtime_PodNetworkSpec_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   nameservers,       1) \
X(a, CALLBACK, REPEATED, STRING,   dns_searches,      2) \
X(a, CALLBACK, REPEATED, STRING,   dns_options,       3) \
X(a, CALLBACK, REPEATED, MESSAGE,  hosts,             4) \
X(a, CALLBACK, SINGULAR, BYTES,    abbot_request_bytes,  11)
#define runtime_PodNetworkSpec_CALLBACK pb_default_field_callback
#define runtime_PodNetworkSpec_DEFAULT NULL
#define runtime_PodNetworkSpec_hosts_MSGTYPE runtime_PodNetworkSpec_HostsEntry

#define runtime_PodNetworkSpec_HostsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_PodNetworkSpec_HostsEntry_CALLBACK pb_default_field_callback
#define runtime_PodNetworkSpec_HostsEntry_DEFAULT NULL

#define runtime_PodEnsureCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   pod_uid,           1) \
X(a, CALLBACK, SINGULAR, STRING,   namespace,         2) \
X(a, CALLBACK, SINGULAR, STRING,   name,              3) \
X(a, STATIC,   SINGULAR, UENUM,    restart_policy,    4) \
X(a, STATIC,   SINGULAR, BOOL,     host_ipc,          5) \
X(a, STATIC,   SINGULAR, BOOL,     host_network,      6) \
X(a, STATIC,   SINGULAR, BOOL,     host_pid,          7) \
X(a, STATIC,   SINGULAR, BOOL,     share_pid,         8) \
X(a, STATIC,   SINGULAR, BOOL,     wait,              9) \
X(a, CALLBACK, SINGULAR, STRING,   hostname,         10) \
X(a, CALLBACK, REPEATED, MESSAGE,  containers,       11) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network,          12) \
X(a, STATIC,   OPTIONAL, MESSAGE,  volumes,          13) \
X(a, STATIC,   OPTIONAL, MESSAGE,  security,         14) \
X(a, CALLBACK, REPEATED, MESSAGE,  labels,           15)
#define runtime_PodEnsureCmd_CALLBACK pb_default_field_callback
#define runtime_PodEnsureCmd_DEFAULT NULL
#define runtime_PodEnsureCmd_containers_MSGTYPE runtime_ContainerSpec
#define runtime_PodEnsureCmd_network_MSGTYPE runtime_PodNetworkSpec
#define runtime_PodEnsureCmd_volumes_MSGTYPE runtime_PodVolumeSpec
#define runtime_PodEnsureCmd_security_MSGTYPE runtime_PodSecuritySpec
#define runtime_PodEnsureCmd_labels_MSGTYPE runtime_PodEnsureCmd_LabelsEntry

#define runtime_PodEnsureCmd_LabelsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define runtime_PodEnsureCmd_LabelsEntry_CALLBACK pb_default_field_callback
#define runtime_PodEnsureCmd_LabelsEntry_DEFAULT NULL

#define runtime_PodDeleteCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   pod_uid,           1) \
X(a, CALLBACK, REPEATED, STRING,   containers,        2) \
X(a, STATIC,   SINGULAR, INT64,    grace_time,       10) \
X(a, CALLBACK, REPEATED, MESSAGE,  hook_pre_stop,    11)
#define runtime_PodDeleteCmd_CALLBACK pb_default_field_callback
#define runtime_PodDeleteCmd_DEFAULT NULL
#define runtime_PodDeleteCmd_hook_pre_stop_MSGTYPE runtime_PodDeleteCmd_HookPreStopEntry

#define runtime_PodDeleteCmd_HookPreStopEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define runtime_PodDeleteCmd_HookPreStopEntry_CALLBACK pb_default_field_callback
#define runtime_PodDeleteCmd_HookPreStopEntry_DEFAULT NULL
#define runtime_PodDeleteCmd_HookPreStopEntry_value_MSGTYPE runtime_ContainerAction

#define runtime_PodListCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     all,               1) \
X(a, CALLBACK, REPEATED, STRING,   names,             2)
#define runtime_PodListCmd_CALLBACK pb_default_field_callback
#define runtime_PodListCmd_DEFAULT NULL

extern const pb_msgdesc_t runtime_NamedData_msg;
extern const pb_msgdesc_t runtime_NamedData_DataMapEntry_msg;
extern const pb_msgdesc_t runtime_SELinuxOptions_msg;
extern const pb_msgdesc_t runtime_ContainerSecuritySpec_msg;
extern const pb_msgdesc_t runtime_ContainerMountSpec_msg;
extern const pb_msgdesc_t runtime_KeyValuePair_msg;
extern const pb_msgdesc_t runtime_ContainerAction_msg;
extern const pb_msgdesc_t runtime_ContainerAction_Exec_msg;
extern const pb_msgdesc_t runtime_ContainerAction_HTTP_msg;
extern const pb_msgdesc_t runtime_ContainerAction_Socket_msg;
extern const pb_msgdesc_t runtime_ContainerProbeSpec_msg;
extern const pb_msgdesc_t runtime_ContainerSpec_msg;
extern const pb_msgdesc_t runtime_ContainerSpec_EnvsEntry_msg;
extern const pb_msgdesc_t runtime_ContainerSpec_MountsEntry_msg;
extern const pb_msgdesc_t runtime_PodVolumeSpec_msg;
extern const pb_msgdesc_t runtime_PodVolumeSpec_HostPathsEntry_msg;
extern const pb_msgdesc_t runtime_PodVolumeSpec_VolumeDataEntry_msg;
extern const pb_msgdesc_t runtime_PodSecuritySpec_msg;
extern const pb_msgdesc_t runtime_PodSecuritySpec_SysctlsEntry_msg;
extern const pb_msgdesc_t runtime_PodNetworkSpec_msg;
extern const pb_msgdesc_t runtime_PodNetworkSpec_HostsEntry_msg;
extern const pb_msgdesc_t runtime_PodEnsureCmd_msg;
extern const pb_msgdesc_t runtime_PodEnsureCmd_LabelsEntry_msg;
extern const pb_msgdesc_t runtime_PodDeleteCmd_msg;
extern const pb_msgdesc_t runtime_PodDeleteCmd_HookPreStopEntry_msg;
extern const pb_msgdesc_t runtime_PodListCmd_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define runtime_NamedData_fields &runtime_NamedData_msg
#define runtime_NamedData_DataMapEntry_fields &runtime_NamedData_DataMapEntry_msg
#define runtime_SELinuxOptions_fields &runtime_SELinuxOptions_msg
#define runtime_ContainerSecuritySpec_fields &runtime_ContainerSecuritySpec_msg
#define runtime_ContainerMountSpec_fields &runtime_ContainerMountSpec_msg
#define runtime_KeyValuePair_fields &runtime_KeyValuePair_msg
#define runtime_ContainerAction_fields &runtime_ContainerAction_msg
#define runtime_ContainerAction_Exec_fields &runtime_ContainerAction_Exec_msg
#define runtime_ContainerAction_HTTP_fields &runtime_ContainerAction_HTTP_msg
#define runtime_ContainerAction_Socket_fields &runtime_ContainerAction_Socket_msg
#define runtime_ContainerProbeSpec_fields &runtime_ContainerProbeSpec_msg
#define runtime_ContainerSpec_fields &runtime_ContainerSpec_msg
#define runtime_ContainerSpec_EnvsEntry_fields &runtime_ContainerSpec_EnvsEntry_msg
#define runtime_ContainerSpec_MountsEntry_fields &runtime_ContainerSpec_MountsEntry_msg
#define runtime_PodVolumeSpec_fields &runtime_PodVolumeSpec_msg
#define runtime_PodVolumeSpec_HostPathsEntry_fields &runtime_PodVolumeSpec_HostPathsEntry_msg
#define runtime_PodVolumeSpec_VolumeDataEntry_fields &runtime_PodVolumeSpec_VolumeDataEntry_msg
#define runtime_PodSecuritySpec_fields &runtime_PodSecuritySpec_msg
#define runtime_PodSecuritySpec_SysctlsEntry_fields &runtime_PodSecuritySpec_SysctlsEntry_msg
#define runtime_PodNetworkSpec_fields &runtime_PodNetworkSpec_msg
#define runtime_PodNetworkSpec_HostsEntry_fields &runtime_PodNetworkSpec_HostsEntry_msg
#define runtime_PodEnsureCmd_fields &runtime_PodEnsureCmd_msg
#define runtime_PodEnsureCmd_LabelsEntry_fields &runtime_PodEnsureCmd_LabelsEntry_msg
#define runtime_PodDeleteCmd_fields &runtime_PodDeleteCmd_msg
#define runtime_PodDeleteCmd_HookPreStopEntry_fields &runtime_PodDeleteCmd_HookPreStopEntry_msg
#define runtime_PodListCmd_fields &runtime_PodListCmd_msg

/* Maximum encoded size of messages (where known) */
/* runtime_NamedData_size depends on runtime parameters */
/* runtime_NamedData_DataMapEntry_size depends on runtime parameters */
/* runtime_SELinuxOptions_size depends on runtime parameters */
/* runtime_ContainerSecuritySpec_size depends on runtime parameters */
/* runtime_ContainerMountSpec_size depends on runtime parameters */
/* runtime_KeyValuePair_size depends on runtime parameters */
/* runtime_ContainerAction_size depends on runtime parameters */
/* runtime_ContainerAction_Exec_size depends on runtime parameters */
/* runtime_ContainerAction_HTTP_size depends on runtime parameters */
/* runtime_ContainerAction_Socket_size depends on runtime parameters */
/* runtime_ContainerProbeSpec_size depends on runtime parameters */
/* runtime_ContainerSpec_size depends on runtime parameters */
/* runtime_ContainerSpec_EnvsEntry_size depends on runtime parameters */
/* runtime_ContainerSpec_MountsEntry_size depends on runtime parameters */
/* runtime_PodVolumeSpec_size depends on runtime parameters */
/* runtime_PodVolumeSpec_HostPathsEntry_size depends on runtime parameters */
/* runtime_PodVolumeSpec_VolumeDataEntry_size depends on runtime parameters */
/* runtime_PodSecuritySpec_size depends on runtime parameters */
/* runtime_PodSecuritySpec_SysctlsEntry_size depends on runtime parameters */
/* runtime_PodNetworkSpec_size depends on runtime parameters */
/* runtime_PodNetworkSpec_HostsEntry_size depends on runtime parameters */
/* runtime_PodEnsureCmd_size depends on runtime parameters */
/* runtime_PodEnsureCmd_LabelsEntry_size depends on runtime parameters */
/* runtime_PodDeleteCmd_size depends on runtime parameters */
/* runtime_PodDeleteCmd_HookPreStopEntry_size depends on runtime parameters */
/* runtime_PodListCmd_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
