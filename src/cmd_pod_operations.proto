/*
Copyright 2019 The arhat.dev Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package aranya;

option go_package = "arhat.dev/aranya-proto/aranyagopb";

message PodOperationCmd {
    enum Action {
        _INVALID_POD_OPERATION_ACTION = 0;

        // Execute commands in existing container
        EXEC_IN_CONTAINER = 1;

        // Attach to existing container
        ATTACH_TO_CONTAINER = 2;

        // Get container/node log
        RETRIEVE_CONTAINER_LOG = 3;

        // Port forward in pod
        PORT_FORWARD_TO_CONTAINER = 4;

        // user input or application data to
        // usually this action happens in Exec, Attach, PortForward session
        WRITE_TO_CONTAINER = 5;

        // user tty resize
        // usually this action happens in Exec, Attach session when tty is enabled
        RESIZE_CONTAINER_TTY = 6;
    }

    // action type
    Action action = 1;

    oneof options {
        // used by log
        LogOptions log_options = 2;
        // used by exec and attach
        ExecOptions exec_options = 3;
        // used by port forward
        PortForwardOptions port_forward_options = 4;
        // used in exec, attach, port_forward session
        InputOptions input_options = 5;
        // used in exec, attach session
        TtyResizeOptions resize_options = 6;
    }
}

message LogOptions {
    string pod_uid = 1;
    string container = 2;

    bool follow = 3;
    bool timestamp = 4;

    string since = 5; // rfc3339 time
    int64 tail_lines = 6;
    int64 bytes_limit = 7;

    bool previous = 8;

    // host log path
    string path = 9;
}

message ExecOptions {
    string pod_uid = 1;
    string container = 2;

    repeated string command = 3;

    bool stdin = 4;
    bool stdout = 5;
    bool stderr = 6;
    bool tty = 7;
    map<string, string> envs = 8;
}

message PortForwardOptions {
    string pod_uid = 1;

    int32 port = 2;
    string protocol = 3;
}

message InputOptions {
    bytes data = 1;
    bool completed = 2;

    // sequence in stream
    uint64 seq = 3;
}

message TtyResizeOptions {
    uint32 cols = 1;
    uint32 rows = 2;
}
