/*
Copyright 2020 The arhat.dev Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

// +build !nodev
package aranya;

option go_package = "arhat.dev/aranya-proto/aranyagopb";

import "connectivity.proto";

message DeviceOperation {
    string id = 1;

    map<string, string> params = 2;
}

message DeviceMetric {
    enum ReportMethod {
        // Report device metrics when collecting node metrics
        REPORT_WITH_NODE_METRICS = 0;
        // Report device metrics along with arhat client
        REPORT_WITH_ARHAT_CONNECTIVITY = 1;
        // Create a standalone client for metrics uploading
        REPORT_WITH_STANDALONE_CLIENT = 2;
    }

    enum ValueType {
        METRICS_VALUE_TYPE_UNTYPED = 0;
        METRICS_VALUE_TYPE_COUNTER = 1;
        METRICS_VALUE_TYPE_GAUGE = 2;
    }

    // Name of this metric
    string name = 1;

    ReportMethod report_method = 2;

    ValueType metrics_value_type = 3;

    // (required) params for device connector to retrieve metrics
    map<string, string> device_params = 4;

    // (optional) params for metrics_reporter to upload metrics
    map<string, string> report_params = 5;
}

message DeviceEnsureCmd {
    string device_id = 1;

    // Connector defines how to connect to the device, operations operate
    // upon this connector
    Connectivity connector = 2;

    // MetricsReporter defines a standalone client for metrics reporting,
    // metrics will be reported via this reporter if its report_method is
    // REPORT_WITH_STANDALONE_CLIENT
    Connectivity metrics_reporter = 3;

    // User defined device operations
    repeated DeviceOperation operations = 4;

    // User defined device metrics
    repeated DeviceMetric metrics = 5;
}

message DeviceListCmd {

}

message DeviceDeleteCmd {
    repeated string device_ids = 1;
}
